{"version":3,"sources":["context/ThemeContext.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","_ref","children","isDarkMode","setIsDarkMode","useState","localStorage","getItem","useEffect","setItem","document","body","style","backgroundColor","color","React","createElement","Provider","value","toggleTheme","useTheme","useContext","TodoItem","styled","div","props","isCompleted","TodoContent","TodoText","span","TodoActions","DeadlineText","deadline","Date","now","priorityOptions","label","categoryOptions","priorityColors","low","medium","high","Todo","todo","onDeleteBtnClick","onToggleComplete","onEditTodo","onUpdatePriority","onUpdateCategory","onUpdateDeadline","isEditing","setIsEditing","editText","setEditText","text","isEditingDeadline","setIsEditingDeadline","editDeadline","setEditDeadline","handleDeadlineEdit","id","Checkbox","isChecked","onChange","flex","TextField","e","target","width","display","gap","marginTop","type","padding","borderRadius","border","Button","appearance","onClick","CalendarIcon","toLocaleString","year","month","day","hour","minute","formatDeadline","Select","options","find","option","priority","styles","container","base","singleValue","menu","state","isFocused","category","handleEdit","iconBefore","TrashIcon","TodoList","todoList","Fragment","map","key","AppContainer","Header","Title","h3","TodoCount","ThemeButton","AppContent","setTodoList","savedTodoList","JSON","parse","textInput","setTextInput","filter","setFilter","searchText","setSearchText","setDeadline","stringify","onAddBtnClick","trim","uuidv4","createdAt","toISOString","filteredTodos","toLowerCase","includes","filterOptions","marginBottom","name","placeholder","onKeyPress","iconAfter","AddIcon","item","newText","newDeadline","length","App","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.1bd3bbcd.chunk.js","sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nexport function ThemeProvider({ children }) {\n    const [isDarkMode, setIsDarkMode] = useState(() => {\n        const savedTheme = localStorage.getItem('theme');\n        return savedTheme === 'dark';\n    });\n\n    useEffect(() => {\n        localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n        document.body.style.backgroundColor = isDarkMode ? '#1a1a1a' : '#ffffff';\n        document.body.style.color = isDarkMode ? '#ffffff' : '#000000';\n    }, [isDarkMode]);\n\n    const toggleTheme = () => {\n        setIsDarkMode(!isDarkMode);\n    };\n\n    return (\n        <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\n            {children}\n        </ThemeContext.Provider>\n    );\n}\n\nexport function useTheme() {\n    return useContext(ThemeContext);\n} ","import Button from '@atlaskit/button';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport TrashIcon from '@atlaskit/icon/glyph/trash';\nimport Checkbox from '@atlaskit/checkbox';\nimport Select from '@atlaskit/select';\nimport TextField from '@atlaskit/textfield';\nimport CalendarIcon from '@atlaskit/icon/glyph/calendar';\nimport { useTheme } from '../context/ThemeContext';\n\nconst TodoItem = styled.div`\n    display: flex;\n    align-items: center;\n    margin: 8px 0;\n    padding: 8px;\n    border-radius: 3px;\n    border: 1px solid ${props => props.isDarkMode ? '#404040' : '#dfe1e6'};\n    background: ${props => props.isDarkMode ? '#2d2d2d' : '#ffffff'};\n    opacity: ${props => props.isCompleted ? 0.7 : 1};\n    transition: all 0.3s ease;\n`;\n\nconst TodoContent = styled.div`\n    flex: 1;\n    display: flex;\n    align-items: center;\n    gap: 12px;\n`;\n\nconst TodoText = styled.span`\n    flex: 1;\n    text-decoration: ${props => props.isCompleted ? 'line-through' : 'none'};\n    color: ${props => props.isDarkMode ? '#ffffff' : '#000000'};\n`;\n\nconst TodoActions = styled.div`\n    display: flex;\n    gap: 8px;\n`;\n\nconst DeadlineText = styled.span`\n    color: ${props => {\n        if (!props.deadline) return props.isDarkMode ? '#999999' : '#666666';\n        const deadline = new Date(props.deadline);\n        const now = new Date();\n        if (deadline < now) return '#F44336';\n        if (deadline - now < 24 * 60 * 60 * 1000) return '#FFC107';\n        return '#4CAF50';\n    }};\n    font-size: 0.9em;\n    display: flex;\n    align-items: center;\n    gap: 4px;\n`;\n\nconst priorityOptions = [\n    { label: 'Thấp', value: 'low' },\n    { label: 'Trung bình', value: 'medium' },\n    { label: 'Cao', value: 'high' }\n];\n\nconst categoryOptions = [\n    { label: 'Cá nhân', value: 'personal' },\n    { label: 'Công việc', value: 'work' },\n    { label: 'Học tập', value: 'study' },\n    { label: 'Khác', value: 'other' }\n];\n\nconst priorityColors = {\n    low: '#4CAF50',\n    medium: '#FFC107',\n    high: '#F44336'\n};\n\nexport default function Todo({ \n    todo, \n    onDeleteBtnClick,\n    onToggleComplete,\n    onEditTodo,\n    onUpdatePriority,\n    onUpdateCategory,\n    onUpdateDeadline\n}) {\n    const { isDarkMode } = useTheme();\n    const [isEditing, setIsEditing] = useState(false);\n    const [editText, setEditText] = useState(todo.text);\n    const [isEditingDeadline, setIsEditingDeadline] = useState(false);\n    const [editDeadline, setEditDeadline] = useState(todo.deadline || '');\n\n    const handleEdit = () => {\n        if (isEditing) {\n            onEditTodo(todo.id, editText);\n        }\n        setIsEditing(!isEditing);\n    };\n\n    const handleDeadlineEdit = () => {\n        if (isEditingDeadline) {\n            onUpdateDeadline(todo.id, editDeadline || null);\n        }\n        setIsEditingDeadline(!isEditingDeadline);\n    };\n\n    const formatDeadline = (deadline) => {\n        if (!deadline) return 'Không có deadline';\n        const date = new Date(deadline);\n        return date.toLocaleString('vi-VN', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit'\n        });\n    };\n\n    return (\n        <TodoItem isCompleted={todo.isCompleted} isDarkMode={isDarkMode}>\n            <TodoContent>\n                <Checkbox\n                    isChecked={todo.isCompleted}\n                    onChange={() => onToggleComplete(todo.id)}\n                />\n                <div style={{ flex: 1 }}>\n                    {isEditing ? (\n                        <TextField\n                            value={editText}\n                            onChange={(e) => setEditText(e.target.value)}\n                            style={{ width: '100%' }}\n                        />\n                    ) : (\n                        <TodoText isCompleted={todo.isCompleted} isDarkMode={isDarkMode}>\n                            {todo.text}\n                        </TodoText>\n                    )}\n                    {isEditingDeadline ? (\n                        <div style={{ display: 'flex', gap: '8px', marginTop: '4px' }}>\n                            <input\n                                type=\"datetime-local\"\n                                value={editDeadline}\n                                onChange={(e) => setEditDeadline(e.target.value)}\n                                style={{ \n                                    padding: '4px', \n                                    borderRadius: '4px', \n                                    border: '1px solid #dfe1e6',\n                                    backgroundColor: isDarkMode ? '#333333' : '#ffffff',\n                                    color: isDarkMode ? '#ffffff' : '#000000'\n                                }}\n                            />\n                            <Button\n                                appearance=\"subtle\"\n                                onClick={handleDeadlineEdit}\n                            >\n                                Lưu\n                            </Button>\n                        </div>\n                    ) : (\n                        <DeadlineText deadline={todo.deadline} isDarkMode={isDarkMode}>\n                            <CalendarIcon label=\"calendar\" />\n                            {formatDeadline(todo.deadline)}\n                        </DeadlineText>\n                    )}\n                </div>\n            </TodoContent>\n            <TodoActions>\n                <Select\n                    options={priorityOptions}\n                    value={priorityOptions.find(option => option.value === todo.priority)}\n                    onChange={(option) => onUpdatePriority(todo.id, option.value)}\n                    styles={{\n                        container: (base) => ({\n                            ...base,\n                            width: '120px'\n                        }),\n                        singleValue: (base) => ({\n                            ...base,\n                            color: priorityColors[todo.priority]\n                        }),\n                        menu: (base) => ({\n                            ...base,\n                            backgroundColor: isDarkMode ? '#2d2d2d' : '#ffffff',\n                            color: isDarkMode ? '#ffffff' : '#000000'\n                        }),\n                        option: (base, state) => ({\n                            ...base,\n                            backgroundColor: state.isFocused ? (isDarkMode ? '#404040' : '#f4f5f7') : 'transparent',\n                            color: isDarkMode ? '#ffffff' : '#000000',\n                            '&:hover': {\n                                backgroundColor: isDarkMode ? '#404040' : '#f4f5f7'\n                            }\n                        })\n                    }}\n                />\n                <Select\n                    options={categoryOptions}\n                    value={categoryOptions.find(option => option.value === todo.category)}\n                    onChange={(option) => onUpdateCategory(todo.id, option.value)}\n                    styles={{\n                        container: (base) => ({\n                            ...base,\n                            width: '120px'\n                        }),\n                        menu: (base) => ({\n                            ...base,\n                            backgroundColor: isDarkMode ? '#2d2d2d' : '#ffffff',\n                            color: isDarkMode ? '#ffffff' : '#000000'\n                        }),\n                        option: (base, state) => ({\n                            ...base,\n                            backgroundColor: state.isFocused ? (isDarkMode ? '#404040' : '#f4f5f7') : 'transparent',\n                            color: isDarkMode ? '#ffffff' : '#000000',\n                            '&:hover': {\n                                backgroundColor: isDarkMode ? '#404040' : '#f4f5f7'\n                            }\n                        })\n                    }}\n                />\n                <Button\n                    appearance=\"subtle\"\n                    onClick={handleEdit}\n                >\n                    {isEditing ? 'Lưu' : 'Sửa'}\n                </Button>\n                <Button\n                    appearance=\"subtle\"\n                    onClick={handleDeadlineEdit}\n                >\n                    {isEditingDeadline ? 'Hủy' : 'Sửa deadline'}\n                </Button>\n                <Button\n                    appearance=\"subtle\"\n                    iconBefore={<TrashIcon label=\"delete\" />}\n                    onClick={() => onDeleteBtnClick(todo.id)}\n                />\n            </TodoActions>\n        </TodoItem>\n    );\n}","import React from 'react';\nimport Todo from './Todo';\n\nexport default function TodoList({ \n  todoList, \n  onDeleteBtnClick,\n  onToggleComplete,\n  onEditTodo,\n  onUpdatePriority,\n  onUpdateCategory,\n  onUpdateDeadline\n}) {\n  return (\n    <>\n      {todoList.map((todo) => (\n        <Todo \n          key={todo.id} \n          todo={todo} \n          onDeleteBtnClick={onDeleteBtnClick}\n          onToggleComplete={onToggleComplete}\n          onEditTodo={onEditTodo}\n          onUpdatePriority={onUpdatePriority}\n          onUpdateCategory={onUpdateCategory}\n          onUpdateDeadline={onUpdateDeadline}\n        />\n      ))}\n    </>\n  );\n}","import React from 'react';\nimport TextField from '@atlaskit/textfield';\nimport Button from '@atlaskit/button';\nimport AddIcon from '@atlaskit/icon/glyph/add';\nimport TodoList from './components/TodoList';\nimport { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Select from '@atlaskit/select';\nimport { ThemeProvider, useTheme } from './context/ThemeContext';\nimport styled from 'styled-components';\n\nconst AppContainer = styled.div`\n    padding: 20px;\n    max-width: 800px;\n    margin: 0 auto;\n    background-color: ${props => props.isDarkMode ? '#1a1a1a' : '#ffffff'};\n    min-height: 100vh;\n    transition: background-color 0.3s ease;\n`;\n\nconst Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n`;\n\nconst Title = styled.h3`\n    color: ${props => props.isDarkMode ? '#ffffff' : '#000000'};\n    margin: 0;\n`;\n\nconst TodoCount = styled.div`\n    color: ${props => props.isDarkMode ? '#999999' : '#666666'};\n`;\n\nconst ThemeButton = styled(Button)`\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    \n    &::before {\n        content: '🌙';\n        font-size: 1.2em;\n    }\n    \n    ${props => props.isDarkMode && `\n        &::before {\n            content: '☀️';\n        }\n    `}\n`;\n\nfunction AppContent() {\n    const { isDarkMode, toggleTheme } = useTheme();\n    // Khởi tạo todoList từ localStorage nếu có\n    const [todoList, setTodoList] = useState(() => {\n        const savedTodoList = localStorage.getItem('todoList');\n        return savedTodoList ? JSON.parse(savedTodoList) : [];\n    });\n    const [textInput, setTextInput] = useState(\"\");\n    const [filter, setFilter] = useState('all'); // 'all', 'active', 'completed'\n    const [searchText, setSearchText] = useState(\"\");\n    const [deadline, setDeadline] = useState(\"\");\n\n    // Lưu todoList vào localStorage mỗi khi có thay đổi\n    useEffect(() => {\n        localStorage.setItem('todoList', JSON.stringify(todoList));\n    }, [todoList]);\n\n    const onTextInputChange = (e) => {\n        setTextInput(e.target.value);\n    }\n\n    const onDeadlineChange = (e) => {\n        setDeadline(e.target.value);\n    }\n\n    const onAddBtnClick = () => {\n        if (textInput.trim() !== \"\") {\n            setTodoList([...todoList, { \n                id: uuidv4(), \n                text: textInput,\n                isCompleted: false,\n                createdAt: new Date().toISOString(),\n                deadline: deadline || null,\n                priority: 'medium',\n                category: 'personal'\n            }]);\n            setTextInput(\"\");\n            setDeadline(\"\");\n        }\n    }\n\n    const onKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            onAddBtnClick();\n        }\n    }\n\n    const onDeleteBtnClick = (id) => {\n        setTodoList(todoList.filter(item => item.id !== id));\n    }\n\n    const onToggleComplete = (id) => {\n        setTodoList(todoList.map(item => \n            item.id === id ? { ...item, isCompleted: !item.isCompleted } : item\n        ));\n    }\n\n    const onEditTodo = (id, newText) => {\n        setTodoList(todoList.map(item =>\n            item.id === id ? { ...item, text: newText } : item\n        ));\n    }\n\n    const onUpdatePriority = (id, priority) => {\n        setTodoList(todoList.map(item =>\n            item.id === id ? { ...item, priority } : item\n        ));\n    }\n\n    const onUpdateCategory = (id, category) => {\n        setTodoList(todoList.map(item =>\n            item.id === id ? { ...item, category } : item\n        ));\n    }\n\n    const onUpdateDeadline = (id, newDeadline) => {\n        setTodoList(todoList.map(item =>\n            item.id === id ? { ...item, deadline: newDeadline } : item\n        ));\n    }\n\n    const filteredTodos = todoList\n        .filter(todo => {\n            if (filter === 'active') return !todo.isCompleted;\n            if (filter === 'completed') return todo.isCompleted;\n            return true;\n        })\n        .filter(todo => \n            todo.text.toLowerCase().includes(searchText.toLowerCase())\n        );\n\n    const filterOptions = [\n        { label: 'Tất cả', value: 'all' },\n        { label: 'Chưa hoàn thành', value: 'active' },\n        { label: 'Đã hoàn thành', value: 'completed' }\n    ];\n\n    return (\n        <AppContainer isDarkMode={isDarkMode}>\n            <Header>\n                <Title isDarkMode={isDarkMode}>Danh sách cần làm</Title>\n                <ThemeButton\n                    appearance=\"subtle\"\n                    onClick={toggleTheme}\n                    isDarkMode={isDarkMode}\n                >\n                    {isDarkMode ? 'Chế độ sáng' : 'Chế độ tối'}\n                </ThemeButton>\n            </Header>\n            <div style={{ display: 'flex', gap: '10px', marginBottom: '20px' }}>\n                <TextField\n                    name=\"todo\"\n                    placeholder=\"Nhập công việc cần làm\"\n                    value={textInput}\n                    onChange={onTextInputChange}\n                    onKeyPress={onKeyPress}\n                    style={{ flex: 1 }}\n                />\n                <input\n                    type=\"datetime-local\"\n                    value={deadline}\n                    onChange={onDeadlineChange}\n                    style={{ \n                        padding: '8px', \n                        borderRadius: '4px', \n                        border: '1px solid #dfe1e6',\n                        backgroundColor: isDarkMode ? '#333333' : '#ffffff',\n                        color: isDarkMode ? '#ffffff' : '#000000'\n                    }}\n                />\n                <Button\n                    appearance=\"primary\"\n                    iconAfter={<AddIcon label=\"add\" />}\n                    onClick={onAddBtnClick}\n                >\n                    Thêm\n                </Button>\n            </div>\n            <div style={{ display: 'flex', gap: '10px', marginBottom: '20px' }}>\n                <TextField\n                    name=\"search\"\n                    placeholder=\"Tìm kiếm...\"\n                    value={searchText}\n                    onChange={(e) => setSearchText(e.target.value)}\n                    style={{ flex: 1 }}\n                />\n                <Select\n                    options={filterOptions}\n                    value={filterOptions.find(option => option.value === filter)}\n                    onChange={(option) => setFilter(option.value)}\n                    placeholder=\"Lọc theo trạng thái\"\n                    styles={{\n                        container: (base) => ({\n                            ...base,\n                            width: '200px'\n                        })\n                    }}\n                />\n            </div>\n            <TodoList \n                todoList={filteredTodos} \n                onDeleteBtnClick={onDeleteBtnClick}\n                onToggleComplete={onToggleComplete}\n                onEditTodo={onEditTodo}\n                onUpdatePriority={onUpdatePriority}\n                onUpdateCategory={onUpdateCategory}\n                onUpdateDeadline={onUpdateDeadline}\n            />\n            <TodoCount isDarkMode={isDarkMode}>\n                {filteredTodos.length} công việc\n            </TodoCount>\n        </AppContainer>\n    );\n}\n\nfunction App() {\n    return (\n        <ThemeProvider>\n            <AppContent />\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}